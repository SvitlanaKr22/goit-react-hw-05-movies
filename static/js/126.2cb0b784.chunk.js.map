{"version":3,"file":"static/js/126.2cb0b784.chunk.js","mappings":"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","sources":["components/ErrorMessage.jsx","components/MovieInfo/MovieInfo.styled.jsx","components/MovieInfo/MovieInfo.jsx","components/MovieAddInfo/MovieAddInfo.styled.jsx","components/MovieAddInfo/MovieAddInfo.jsx","pages/MovieDetails.jsx","services/fetchDateAboutMovies.js"],"sourcesContent":["const ErrorMessage = ({ children }) => {\n  return <p style={{ color: 'orangered' }}>{children}</p>;\n};\n\nexport default ErrorMessage;\n","import styled from 'styled-components';\nimport { NavLink } from 'react-router-dom';\n\nexport const DivInfo = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  gap: 20px;\n  margin-top: 10px;\n`;\nexport const Link = styled(NavLink)`\n  padding: 8px 16px;\n\n  border-radius: 4px;\n  text-decoration: none;\n  list-style: none;\n  line-height: 1.5;\n\n  font-weight: 500;\n  color: orangered;\n\n  &:hover {\n    color: #0a64a0;\n  }\n`;\n","import PropTypes from 'prop-types';\nimport { DivInfo } from './MovieInfo.styled';\nconst MovieInfo = ({ image, title, score, overview, genres, year }) => {\n  return (\n    <DivInfo>\n      <img src={image} alt=\"movie's poster\"></img>\n      <div>\n        <h2>\n          {title} {`(${year})`}\n        </h2>\n        <p>User score: {score}</p>\n        <h3>Overview</h3>\n        <p>{overview}</p>\n        <h3>Genres</h3>\n        <p>{genres}</p>\n      </div>\n    </DivInfo>\n  );\n};\nexport default MovieInfo;\n\nMovieInfo.propTypes = {\n  image: PropTypes.string.isRequired,\n  title: PropTypes.string.isRequired,\n  score: PropTypes.number.isRequired,\n  overview: PropTypes.string.isRequired,\n  genres: PropTypes.string.isRequired,\n  year: PropTypes.string.isRequired,\n};\n","import styled from 'styled-components';\nimport { NavLink } from 'react-router-dom';\n\nexport const Link = styled(NavLink)`\n  padding: 8px 16px;\n\n  border-radius: 4px;\n  text-decoration: none;\n  list-style: none;\n  line-height: 1.5;\n\n  font-weight: 500;\n  color: #0a64a0;\n\n  &:hover {\n    color: orangered;\n  }\n`;\n\nexport const Header = styled.h3`\n  margin-top: 24px;\n  margin-bottom: 10px;\n  color: orangered;\n  padding-left: 20px;\n`;\n\nexport const List = styled.ul`\n  list-style: none;\n  padding-left: 20px;\n`;\n","import { Outlet } from 'react-router-dom';\nimport { Suspense } from 'react';\nimport { Link, Header, List } from './MovieAddInfo.styled';\n\nconst MovieAddInfo = () => {\n  return (\n    <div>\n      <Header>Additional information</Header>\n      <List>\n        <li>\n          <Link to=\"cast\">Cast</Link>\n        </li>\n        <li>\n          <Link to=\"reviews\">Reviews</Link>\n        </li>\n      </List>\n      <Suspense fallback={<div>Loading...</div>}>\n        <Outlet />\n      </Suspense>\n    </div>\n  );\n};\nexport default MovieAddInfo;\n","import { useParams, useLocation } from 'react-router-dom';\nimport { useState, useEffect, useRef } from 'react';\nimport MovieInfo from 'components/MovieInfo/MovieInfo';\nimport MovieAddInfo from 'components/MovieAddInfo/MovieAddInfo';\nimport { fetchDetails } from 'services/fetchDateAboutMovies';\nimport { Link } from 'components/MovieInfo/MovieInfo.styled';\nimport ErrorMessage from 'components/ErrorMessage';\n\nconst MovieDetails = () => {\n  //   получить id из строки запросa\n  //   сделать запрос\n  //   распаковать данные для рендеринга\n  const [title, setTitle] = useState('');\n  const [overview, setOverview] = useState('');\n  const [strganres, setStrgantes] = useState('');\n  const [releasedate, setReleasedate] = useState('');\n  const [poster, setPocter] = useState('');\n  const [score, setScore] = useState(0);\n  const { movieId } = useParams();\n  const location = useLocation(); //объект местоположения, представляющий текущий URL\n  const backLinkHref = useRef(location.state?.from ?? '/');\n  const [error, setError] = useState(null);\n\n  useEffect(() => {\n    fetchDetails(movieId)\n      .then(\n        ({\n          title,\n          overview,\n          genres,\n          release_date,\n          poster_path,\n          vote_average,\n        }) => {\n          setTitle(title);\n          setOverview(overview);\n          setStrgantes(genres.map(genre => genre.name).join(' | '));\n          setReleasedate(release_date.slice(0, 4));\n          setPocter('https://image.tmdb.org/t/p/w400/' + poster_path);\n          setScore(vote_average);\n        }\n      )\n      .catch(error => setError(error.message));\n  }, [movieId]);\n\n  return (\n    <main>\n      <Link to={backLinkHref.current}>Go back</Link>\n      {!error ? (\n        <>\n          <MovieInfo\n            title={title}\n            overview={overview}\n            genres={strganres}\n            year={releasedate}\n            image={poster}\n            score={score}\n          />\n          <MovieAddInfo />\n        </>\n      ) : (\n        <ErrorMessage>{error}</ErrorMessage>\n      )}\n    </main>\n  );\n};\n\nexport default MovieDetails;\n","import axios from 'axios';\n\nconst API_KEY = '55908c20a8c5b517b5247533a2b5c98b';\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\n\nexport async function fetchTrending(media_type, time_window, controller) {\n  try {\n    const response = await axios.get(`/trending/${media_type}/${time_window}`, {\n      params: {\n        api_key: API_KEY,\n      },\n      signal: controller.signal,\n    });\n    return response.data;\n  } catch (error) {\n    console.error(error);\n  }\n}\n\nexport async function fetchSearch(query) {\n  try {\n    const response = await axios.get('/search/movie', {\n      params: {\n        api_key: API_KEY,\n        query,\n      },\n    });\n    return response.data;\n  } catch (error) {\n    console.error(error);\n  }\n}\n\nexport async function fetchDetails(movie_id) {\n  try {\n    const response = await axios.get(`/movie/${movie_id}`, {\n      params: {\n        api_key: API_KEY,\n      },\n    });\n    return response.data;\n  } catch (error) {\n    console.error(error);\n  }\n}\n\nexport async function fetchCredits(movie_id, controller) {\n  try {\n    const response = await axios.get(`/movie/${movie_id}/credits`, {\n      params: {\n        api_key: API_KEY,\n      },\n      signal: controller.signal,\n    });\n    return response.data;\n  } catch (error) {\n    console.error(error);\n  }\n}\n\nexport async function fetchReviews(movie_id, controller) {\n  try {\n    const response = await axios.get(`/movie/${movie_id}/reviews`, {\n      params: {\n        api_key: API_KEY,\n      },\n      signal: controller.signal,\n    });\n    return response.data;\n  } catch (error) {\n    console.error(error);\n  }\n}\n\n//https://api.themoviedb.org/3/movie/550?api_key=55908c20a8c5b517b5247533a2b5c98b\n"],"names":["children","style","color","DivInfo","styled","Link","NavLink","image","title","score","overview","genres","year","src","alt","Header","List","to","Suspense","fallback","useState","setTitle","setOverview","strganres","setStrgantes","releasedate","setReleasedate","poster","setPocter","setScore","movieId","useParams","location","useLocation","backLinkHref","useRef","state","from","error","setError","useEffect","fetchDetails","then","release_date","poster_path","vote_average","map","genre","name","join","slice","catch","message","current","ErrorMessage","API_KEY","fetchTrending","media_type","time_window","controller","axios","params","api_key","signal","response","data","console","fetchSearch","query","movie_id","fetchCredits","fetchReviews"],"sourceRoot":""}