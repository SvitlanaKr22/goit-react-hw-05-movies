{"version":3,"file":"static/js/415.4ee35055.chunk.js","mappings":"oJAIA,IAJqB,SAAC,GAAkB,IAAhBA,EAAe,EAAfA,SACtB,OAAO,cAAGC,MAAO,CAAEC,MAAO,aAAnB,SAAmCF,GAC3C,C,sGCCYG,GAAOC,EAAAA,EAAAA,IAAOC,EAAAA,GAAPD,CAAH,4NAcJE,EAAOF,EAAAA,GAAAA,GAAH,kF,SCEjB,EAfmB,SAAC,GAAmB,IAAjBG,EAAgB,EAAhBA,UACdC,GAAWC,EAAAA,EAAAA,MACjB,OACE,SAACH,EAAD,UACGC,EAAUG,KAAI,SAAAC,GAAK,OAClB,yBACE,SAACR,EAAD,CAAMS,GAAE,kBAAaD,EAAME,IAAMC,MAAO,CAAEC,KAAMP,GAAhD,SACGG,EAAMK,SAFFL,EAAME,GADG,KASzB,C,uGCyBD,UArCa,WACX,OAAsCI,EAAAA,EAAAA,UAAS,IAA/C,eAAOC,EAAP,KAAoBC,EAApB,KACA,GAA0BF,EAAAA,EAAAA,UAAS,MAAnC,eAAOG,EAAP,KAAcC,EAAd,KAqBA,OAnBAC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAa,IAAIC,gBAavB,OAXAC,EAAAA,EAAAA,IAAc,QAAS,MAAOF,GAC3BG,MAAK,SAAAC,GACJR,GAAe,OACVQ,EAAKC,QAAQlB,KAAI,kBAAoB,CACtCG,GADkB,EAAGA,GAErBG,MAFkB,EAAOA,MAAP,KAKvB,IACAa,OAAM,SAAAT,GAAK,OAAIC,EAASD,EAAMU,QAAnB,IAEP,WACLP,EAAWQ,OACZ,CACF,GAAE,KAGD,6BACE,eAAI9B,MAAO,CAAE+B,SAAU,SAAUC,QAAS,MAAOC,WAAY,QAA7D,4BAGEd,GAGA,SAAC,IAAD,UAAeA,KAFf,SAAC,IAAD,CAAYb,UAAWW,MAM9B,C,mMCtCKiB,EAAU,mCAGT,SAAeV,EAAtB,mDAAO,OAAP,oBAAO,WAA6BW,EAAYC,EAAad,GAAtD,gGAEoBe,EAAAA,EAAAA,IAAA,oBAAuBF,EAAvB,YAAqCC,GAAe,CACzEE,OAAQ,CACNC,QAASL,GAEXM,OAAQlB,EAAWkB,SANlB,cAEGC,EAFH,yBAQIA,EAASf,MARb,gCAUHgB,QAAQvB,MAAR,MAVG,gFAcA,SAAewB,EAAtB,+CAAO,OAAP,oBAAO,WAA2BC,GAA3B,gGAEoBP,EAAAA,EAAAA,IAAU,gBAAiB,CAChDC,OAAQ,CACNC,QAASL,EACTU,MAAAA,KALD,cAEGH,EAFH,yBAQIA,EAASf,MARb,gCAUHgB,QAAQvB,MAAR,MAVG,gFAcA,SAAe0B,EAAtB,+CAAO,OAAP,oBAAO,WAA4BC,GAA5B,gGAEoBT,EAAAA,EAAAA,IAAA,iBAAoBS,GAAY,CACrDR,OAAQ,CACNC,QAASL,KAJV,cAEGO,EAFH,yBAOIA,EAASf,MAPb,gCASHgB,QAAQvB,MAAR,MATG,gFAaA,SAAe4B,EAAtB,iDAAO,OAAP,oBAAO,WAA4BD,EAAUxB,GAAtC,gGAEoBe,EAAAA,EAAAA,IAAA,iBAAoBS,EAApB,YAAwC,CAC7DR,OAAQ,CACNC,QAASL,GAEXM,OAAQlB,EAAWkB,SANlB,cAEGC,EAFH,yBAQIA,EAASf,MARb,gCAUHgB,QAAQvB,MAAR,MAVG,gFAcA,SAAe6B,EAAtB,oC,aAAO,O,oBAAA,WAA4BF,EAAUxB,GAAtC,gGAEoBe,EAAAA,EAAAA,IAAA,iBAAoBS,EAApB,YAAwC,CAC7DR,OAAQ,CACNC,QAASL,GAEXM,OAAQlB,EAAWkB,SANlB,cAEGC,EAFH,yBAQIA,EAASf,MARb,gCAUHgB,QAAQvB,MAAR,MAVG,gFAzDPkB,EAAAA,EAAAA,SAAAA,QAAyB,+B","sources":["components/ErrorMessage.jsx","components/MoviesList/Movieslist.styled.jsx","components/MoviesList/Movieslist.jsx","pages/Home.jsx","services/fetchDateAboutMovies.js"],"sourcesContent":["const ErrorMessage = ({ children }) => {\n  return <p style={{ color: 'orangered' }}>{children}</p>;\n};\n\nexport default ErrorMessage;\n","import styled from 'styled-components';\nimport { NavLink } from 'react-router-dom';\n\nexport const Link = styled(NavLink)`\n  padding: 8px 16px;\n  border-radius: 4px;\n  text-decoration: none;\n  list-style: none;\n  line-height: 1.5;\n  font-weight: 500;\n  color: #0a64a0;\n\n  &:hover {\n    color: orangered;\n  }\n`;\n\nexport const List = styled.ul`\n  padding: 0;\n  list-style: none;\n  margin-left: 20px;\n`;\n","import { useLocation } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport { Link, List } from './Movieslist.styled';\n\nconst MoviesList = ({ arrMovies }) => {\n  const location = useLocation(); //объект местоположения, представляющий текущий URL\n  return (\n    <List>\n      {arrMovies.map(movie => (\n        <li key={movie.id}>\n          <Link to={`/movies/${movie.id}`} state={{ from: location }}>\n            {movie.title}\n          </Link>\n        </li>\n      ))}\n    </List>\n  );\n};\n\nexport default MoviesList;\n\nMoviesList.propTypes = {\n  arrMovies: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number.isRequired,\n      title: PropTypes.string.isRequired,\n    })\n  ).isRequired,\n};\n","import { useState, useEffect } from 'react';\nimport { fetchTrending } from 'services/fetchDateAboutMovies';\nimport MoviesList from 'components/MoviesList/Movieslist';\nimport ErrorMessage from 'components/ErrorMessage';\n\nconst Home = () => {\n  const [titlesMovie, setTitlesMovie] = useState([]);\n  const [error, setError] = useState(null);\n\n  useEffect(() => {\n    const controller = new AbortController();\n\n    fetchTrending('movie', 'day', controller)\n      .then(data => {\n        setTitlesMovie([\n          ...data.results.map(({ id, title }) => ({\n            id,\n            title,\n          })),\n        ]);\n      })\n      .catch(error => setError(error.message));\n\n    return () => {\n      controller.abort();\n    };\n  }, []);\n\n  return (\n    <main>\n      <h1 style={{ fontSize: '1.8 em', opacity: '0.8', marginLeft: '10px' }}>\n        Trending today\n      </h1>\n      {!error ? (\n        <MoviesList arrMovies={titlesMovie} />\n      ) : (\n        <ErrorMessage>{error}</ErrorMessage>\n      )}\n    </main>\n  );\n};\n\nexport default Home;\n\n//https://api.themoviedb.org/3/movie/550?api_key=55908c20a8c5b517b5247533a2b5c98b\n","import axios from 'axios';\n\nconst API_KEY = '55908c20a8c5b517b5247533a2b5c98b';\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\n\nexport async function fetchTrending(media_type, time_window, controller) {\n  try {\n    const response = await axios.get(`/trending/${media_type}/${time_window}`, {\n      params: {\n        api_key: API_KEY,\n      },\n      signal: controller.signal,\n    });\n    return response.data;\n  } catch (error) {\n    console.error(error);\n  }\n}\n\nexport async function fetchSearch(query) {\n  try {\n    const response = await axios.get('/search/movie', {\n      params: {\n        api_key: API_KEY,\n        query,\n      },\n    });\n    return response.data;\n  } catch (error) {\n    console.error(error);\n  }\n}\n\nexport async function fetchDetails(movie_id) {\n  try {\n    const response = await axios.get(`/movie/${movie_id}`, {\n      params: {\n        api_key: API_KEY,\n      },\n    });\n    return response.data;\n  } catch (error) {\n    console.error(error);\n  }\n}\n\nexport async function fetchCredits(movie_id, controller) {\n  try {\n    const response = await axios.get(`/movie/${movie_id}/credits`, {\n      params: {\n        api_key: API_KEY,\n      },\n      signal: controller.signal,\n    });\n    return response.data;\n  } catch (error) {\n    console.error(error);\n  }\n}\n\nexport async function fetchReviews(movie_id, controller) {\n  try {\n    const response = await axios.get(`/movie/${movie_id}/reviews`, {\n      params: {\n        api_key: API_KEY,\n      },\n      signal: controller.signal,\n    });\n    return response.data;\n  } catch (error) {\n    console.error(error);\n  }\n}\n\n//https://api.themoviedb.org/3/movie/550?api_key=55908c20a8c5b517b5247533a2b5c98b\n"],"names":["children","style","color","Link","styled","NavLink","List","arrMovies","location","useLocation","map","movie","to","id","state","from","title","useState","titlesMovie","setTitlesMovie","error","setError","useEffect","controller","AbortController","fetchTrending","then","data","results","catch","message","abort","fontSize","opacity","marginLeft","API_KEY","media_type","time_window","axios","params","api_key","signal","response","console","fetchSearch","query","fetchDetails","movie_id","fetchCredits","fetchReviews"],"sourceRoot":""}