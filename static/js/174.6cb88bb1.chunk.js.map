{"version":3,"file":"static/js/174.6cb88bb1.chunk.js","mappings":"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","sources":["components/ErrorMessage.jsx","components/MoviesList/Movieslist.styled.jsx","components/MoviesList/Movieslist.jsx","components/Searchform/Searchform.styled.jsx","components/Searchform/Searchform.jsx","pages/Movies.jsx","services/fetchDateAboutMovies.js"],"sourcesContent":["const ErrorMessage = ({ children }) => {\n  return <p style={{ color: 'orangered' }}>{children}</p>;\n};\n\nexport default ErrorMessage;\n","import styled from 'styled-components';\nimport { NavLink } from 'react-router-dom';\n\nexport const Link = styled(NavLink)`\n  padding: 8px 16px;\n  border-radius: 4px;\n  text-decoration: none;\n  list-style: none;\n  line-height: 1.5;\n  font-weight: 500;\n  color: #0a64a0;\n\n  &:hover {\n    color: orangered;\n  }\n`;\n\nexport const List = styled.ul`\n  padding: 0;\n  list-style: none;\n  margin-left: 20px;\n`;\n","import { useLocation } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport { Link, List } from './Movieslist.styled';\n\nconst MoviesList = ({ arrMovies }) => {\n  const location = useLocation(); //объект местоположения, представляющий текущий URL\n  return (\n    <List>\n      {arrMovies.map(movie => (\n        <li key={movie.id}>\n          <Link to={`/movies/${movie.id}`} state={{ from: location }}>\n            {movie.title}\n          </Link>\n        </li>\n      ))}\n    </List>\n  );\n};\n\nexport default MoviesList;\n\nMoviesList.propTypes = {\n  arrMovies: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number.isRequired,\n      title: PropTypes.string.isRequired,\n    })\n  ).isRequired,\n};\n","import styled from 'styled-components';\nimport { Form as FormikForm } from 'formik';\nimport { Field as FormikField } from 'formik';\nimport { ErrorMessage as FormikErrorMessage } from 'formik';\n\nexport const Form = styled(FormikForm)`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  gap: 8px;\n  width: 100%;\n  max-width: 600px;\n  background-color: #fff;\n  border-radius: 3px;\n  overflow: hidden;\n`;\n\nexport const Field = styled(FormikField)`\n  display: block;\n  width: 99%;\n  /* height: calc(2.25rem + 2px); */\n  padding: 0.5rem 0.5rem;\n  font-family: inherit;\n  font-size: inherit;\n  font-weight: 400;\n  line-height: 1.5;\n  color: #212529;\n  background-color: #fff;\n  background-clip: padding-box;\n\n  border: 1px solid #bdbdbd;\n\n  border-radius: 0.25rem;\n  transition: border-color 0.15s ease-in-out, box-shadow 0.15s ease-in-out;\n\n  &::placeholder {\n    color: #212529;\n    opacity: 0.4;\n  }\n  &:focus {\n    color: #212529;\n    background-color: #fff;\n    border-color: #bdbdbd;\n    outline: 0;\n    box-shadow: 0 0 0 0.2rem rgba(158, 158, 158, 0.25);\n  }\n`;\n\nexport const ErrorMessage = styled(FormikErrorMessage)`\n  position: absolute;\n  font-size: 1rem;\n  color: red;\n  padding-left: 5px;\n`;\n\nexport const ButtonForm = styled.button`\n  font: inherit;\n  cursor: pointer;\n  display: inline-block;\n  text-align: center;\n  margin: 2px 0;\n  border: solid 1px transparent;\n  border-radius: 4px;\n  padding: 0.6rem 1.5rem;\n  color: #ffffff;\n  background-color: #0a64a0;\n\n  &:active {\n    transform: translateY(1px);\n    filter: saturate(150%);\n  }\n\n  &:hover,\n  &:focus {\n    color: #0a64a0;\n    border-color: currentColor;\n    background-color: white;\n  }\n`;\n\nexport const ButtonLabel = styled.span`\n  position: absolute;\n  width: 1px;\n  height: 1px;\n  padding: 0;\n  overflow: hidden;\n  clip: rect(0, 0, 0, 0);\n  white-space: nowrap;\n  clip-path: inset(50%);\n  border: 0;\n`;\n","import { Formik } from 'formik';\nimport { Form, ButtonForm, Field, ErrorMessage } from './Searchform.styled';\nimport * as Yup from 'yup';\n\nconst SignupSchema = Yup.object().shape({\n  searchName: Yup.string('')\n    .trim()\n    .lowercase()\n    .matches(/[abcdefghijklmnopqrstuvwxyz]+/, 'Is not in correct format')\n    .required('Please enter here what you are looking for'),\n});\n\nconst Searchform = ({ onSearch }) => (\n  <Formik\n    initialValues={{ searchName: '' }}\n    validationSchema={SignupSchema}\n    onSubmit={(values, actions) => {\n      const { searchName } = values;\n      onSearch(searchName);\n      actions.resetForm();\n    }}\n  >\n    <Form>\n      <div style={{ width: '100%' }}>\n        <Field type=\"text\" name=\"searchName\" placeholder=\"Search movie\" />\n        <ErrorMessage name=\"searchName\" component=\"div\" />\n      </div>\n      <ButtonForm type=\"submit\">Search</ButtonForm>\n    </Form>\n  </Formik>\n);\n\nexport default Searchform;\n","import Searchform from 'components/Searchform/Searchform';\nimport { useState, useEffect, useMemo } from 'react';\nimport { useSearchParams } from 'react-router-dom';\nimport { fetchSearch } from 'services/fetchDateAboutMovies';\nimport MoviesList from 'components/MoviesList/Movieslist';\nimport ErrorMessage from 'components/ErrorMessage';\n\nconst Movies = () => {\n  const [listFoundMovie, setFoundMovie] = useState([]);\n  const [serchParams, setSearchParams] = useSearchParams();\n  const [error, setError] = useState(null);\n\n  const namemovie = useMemo(\n    () => serchParams.get('query') ?? '',\n    [serchParams]\n  );\n\n  useEffect(() => {\n    if (namemovie === '') return;\n\n    fetchSearch(namemovie)\n      .then(({ results }) => {\n        setFoundMovie(\n          results.map(({ id, title }) => ({\n            id,\n            title,\n          }))\n        );\n      })\n      .catch(error => setError(error.message));\n  }, [namemovie]);\n\n  const handleNameMovie = name => setSearchParams({ query: name });\n\n  return (\n    <main>\n      <Searchform onSearch={handleNameMovie} />\n      {!error && namemovie !== '' ? (\n        <MoviesList arrMovies={listFoundMovie} />\n      ) : (\n        <ErrorMessage>{error}</ErrorMessage>\n      )}\n    </main>\n  );\n};\n\nexport default Movies;\n","import axios from 'axios';\n\nconst API_KEY = '55908c20a8c5b517b5247533a2b5c98b';\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\n\nexport async function fetchTrending(media_type, time_window, controller) {\n  try {\n    const response = await axios.get(`/trending/${media_type}/${time_window}`, {\n      params: {\n        api_key: API_KEY,\n      },\n      signal: controller.signal,\n    });\n    return response.data;\n  } catch (error) {\n    console.error(error);\n  }\n}\n\nexport async function fetchSearch(query) {\n  try {\n    const response = await axios.get('/search/movie', {\n      params: {\n        api_key: API_KEY,\n        query,\n      },\n    });\n    return response.data;\n  } catch (error) {\n    console.error(error);\n  }\n}\n\nexport async function fetchDetails(movie_id) {\n  try {\n    const response = await axios.get(`/movie/${movie_id}`, {\n      params: {\n        api_key: API_KEY,\n      },\n    });\n    return response.data;\n  } catch (error) {\n    console.error(error);\n  }\n}\n\nexport async function fetchCredits(movie_id, controller) {\n  try {\n    const response = await axios.get(`/movie/${movie_id}/credits`, {\n      params: {\n        api_key: API_KEY,\n      },\n      signal: controller.signal,\n    });\n    return response.data;\n  } catch (error) {\n    console.error(error);\n  }\n}\n\nexport async function fetchReviews(movie_id, controller) {\n  try {\n    const response = await axios.get(`/movie/${movie_id}/reviews`, {\n      params: {\n        api_key: API_KEY,\n      },\n      signal: controller.signal,\n    });\n    return response.data;\n  } catch (error) {\n    console.error(error);\n  }\n}\n\n//https://api.themoviedb.org/3/movie/550?api_key=55908c20a8c5b517b5247533a2b5c98b\n"],"names":["children","style","color","Link","styled","NavLink","List","arrMovies","location","useLocation","map","movie","to","id","state","from","title","Form","FormikForm","Field","FormikField","ErrorMessage","FormikErrorMessage","ButtonForm","SignupSchema","Yup","shape","searchName","trim","lowercase","matches","required","onSearch","initialValues","validationSchema","onSubmit","values","actions","resetForm","width","type","name","placeholder","component","useState","listFoundMovie","setFoundMovie","useSearchParams","serchParams","setSearchParams","error","setError","namemovie","useMemo","get","useEffect","fetchSearch","then","results","catch","message","query","API_KEY","fetchTrending","media_type","time_window","controller","axios","params","api_key","signal","response","data","console","fetchDetails","movie_id","fetchCredits","fetchReviews"],"sourceRoot":""}